#!/bin/sh
# postinst script for freehold
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
	# create a freehold group and user
        if ! grep -q freehold /etc/passwd; then
		adduser --system --no-create-home freehold
		addgroup --system freehold
		adduser freehold freehold
        fi

	# this should agree with /etc/freehold/settings.json
	mkdir -p /var/lib/freehold
	chown -R freehold:freehold /var/lib/freehold

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_installinit
if [ -x "/etc/init.d/freehold" ] || [ -e "/etc/init/freehold.conf" ]; then
	if [ ! -e "/etc/init/freehold.conf" ]; then
		update-rc.d freehold defaults >/dev/null
	fi
	invoke-rc.d freehold start || exit $?
fi
# End automatically added section
# Automatically added by dh_installinit
update-rc.d -f freehold remove >/dev/null || exit $?
# End automatically added section


exit 0


